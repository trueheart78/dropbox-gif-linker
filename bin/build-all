#!/bin/bash

set -e -x

echo "Creating release dir..."
mkdir -p release

# variables as defined by "go tool nm"
OSVAR=github.com/trueheart78/dropbox-gif-linker/cmd.BuildOS
ARCHVAR=github.com/trueheart78/dropbox-gif-linker/cmd.BuildARCH
ARMVAR=github.com/trueheart78/dropbox-gif-linker/cmd.BuildARM

# handle alternate binary name for pre-releases
BINNAME=${NAME:-dropbox-gif-linker}

# main.go path
MAINGO="main.go"

createRelease() {
  os=$1
  arch=$2
  arm=$3

  if [ "$os" = darwin ]
  then
    osname='mac'
  else
    osname=$os
  fi
  if [ "$arch" = amd64 ]
  then
    osarch=64bit
  elif [ "$os" = linux ] && [ "$arch" = ppc64 ]
        then
                osarch=ppc64
        else
    osarch=32bit

  fi

  ldflags="-X $OSVAR=$os -X $ARCHVAR=$arch"
  if [ "$arm" ]
  then
    osarch=arm-v$arm
    ldflags="$ldflags -X $ARMVAR=$arm"
  elif [ "$arch" = arm64 ]
  then
    osarch=arm-v8
    ldflags="$ldflags -X $ARMVAR=8"
  fi

  binname=$BINNAME
  if [ "$osname" = windows ]
  then
    binname="$binname.exe"
  fi

  relname="../release/$BINNAME-$osname-$osarch"
  echo "Creating $os/$arch binary..."

  if [ "$arm" ]
  then
    GOOS=$os GOARCH=$arch GOARM=$arm go build -ldflags "$ldflags" -o "out/$binname" "$MAINGO"
  else
    GOOS=$os GOARCH=$arch go build -ldflags "$ldflags" -o "out/$binname" "$MAINGO"
  fi

  cd out

  if [ "$osname" = windows ]
  then
    zip "$relname.zip" "$binname"
  else
    tar cvzf "$relname.tgz" "$binname"
  fi
  cd ..
}

# Mac Releases
createRelease darwin 386
createRelease darwin amd64

# PowerPC Releases
createRelease linux ppc64

# Linux Releases
createRelease linux 386
createRelease linux amd64

# FreeBSD Releases
createRelease freebsd 386
createRelease freebsd amd64

# OpenBSD Releases
createRelease openbsd 386
createRelease openbsd amd64

# ARM Releases
createRelease linux arm 5
createRelease linux arm 6
createRelease linux arm 7
createRelease linux arm64

# Windows Releases
createRelease windows 386
createRelease windows amd64
